openapi: 3.0.0
info:
  title: 모듈러 모놀리스 E-Commerce API
  description: 모듈러 모놀리스 아키텍처를 사용한 E-Commerce 애플리케이션의 RESTful API
  version: 1.0.0
  contact:
    name: 개발팀
    email: dev@example.com

servers:
  - url: http://localhost:8080/api/v1
    description: 로컬 개발 서버
  - url: https://api.example.com/api/v1
    description: 프로덕션 서버

tags:
  - name: Members
    description: 회원 관리 API
  - name: Orders
    description: 주문 관리 API
  - name: Payments
    description: 결제 관리 API
  - name: Health
    description: 시스템 상태 API

paths:
  /health:
    get:
      summary: 헬스 체크
      description: 서버 상태를 확인합니다.
      tags:
        - Health
      responses:
        "200":
          description: 서버가 정상적으로 작동 중
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "ok"

  /members:
    post:
      summary: 회원 생성
      description: 새로운 회원을 생성합니다.
      tags:
        - Members
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateMemberRequest"
      responses:
        "201":
          description: 회원 생성 성공
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MemberResponse"
        "400":
          description: 잘못된 요청
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /members/{id}:
    get:
      summary: 회원 조회
      description: ID로 회원을 조회합니다.
      tags:
        - Members
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: 회원 ID
      responses:
        "200":
          description: 회원 조회 성공
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MemberResponse"
        "404":
          description: 회원을 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      summary: 회원 정보 업데이트
      description: 회원 정보를 업데이트합니다.
      tags:
        - Members
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: 회원 ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateMemberRequest"
      responses:
        "200":
          description: 회원 업데이트 성공
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MemberResponse"
        "400":
          description: 잘못된 요청
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: 회원을 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      summary: 회원 삭제
      description: 회원을 삭제합니다.
      tags:
        - Members
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: 회원 ID
      responses:
        "204":
          description: 회원 삭제 성공
        "404":
          description: 회원을 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /orders:
    post:
      summary: 주문 생성
      description: 새로운 주문을 생성합니다.
      tags:
        - Orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrderRequest"
      responses:
        "201":
          description: 주문 생성 성공
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderResponse"
        "400":
          description: 잘못된 요청
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /orders/{id}:
    get:
      summary: 주문 조회
      description: ID로 주문을 조회합니다.
      tags:
        - Orders
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: 주문 ID
      responses:
        "200":
          description: 주문 조회 성공
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderResponse"
        "404":
          description: 주문을 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /orders/customer/{customerId}:
    get:
      summary: 고객 주문 목록 조회
      description: 고객 ID로 주문 목록을 조회합니다.
      tags:
        - Orders
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
          description: 고객 ID
      responses:
        "200":
          description: 주문 목록 조회 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderResponse"
        "400":
          description: 잘못된 요청
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /orders/{id}/status:
    put:
      summary: 주문 상태 업데이트
      description: 주문 상태를 업데이트합니다.
      tags:
        - Orders
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: 주문 ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateOrderStatusRequest"
      responses:
        "200":
          description: 주문 상태 업데이트 성공
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderResponse"
        "400":
          description: 잘못된 요청
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: 주문을 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /orders/{id}/cancel:
    post:
      summary: 주문 취소
      description: 주문을 취소합니다.
      tags:
        - Orders
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: 주문 ID
      responses:
        "200":
          description: 주문 취소 성공
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderResponse"
        "404":
          description: 주문을 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /payments:
    post:
      summary: 결제 생성
      description: 새로운 결제를 생성합니다.
      tags:
        - Payments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePaymentRequest"
      responses:
        "201":
          description: 결제 생성 성공
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentResponse"
        "400":
          description: 잘못된 요청
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /payments/{id}/process:
    post:
      summary: 결제 처리
      description: 결제를 처리합니다.
      tags:
        - Payments
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: 결제 ID
      responses:
        "200":
          description: 결제 처리 성공
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentResponse"
        "404":
          description: 결제를 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /payments/{id}:
    get:
      summary: 결제 조회
      description: ID로 결제를 조회합니다.
      tags:
        - Payments
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: 결제 ID
      responses:
        "200":
          description: 결제 조회 성공
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentResponse"
        "404":
          description: 결제를 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /payments/order/{orderId}:
    get:
      summary: 주문별 결제 조회
      description: 주문 ID로 결제를 조회합니다.
      tags:
        - Payments
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
          description: 주문 ID
      responses:
        "200":
          description: 결제 조회 성공
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentResponse"
        "404":
          description: 결제를 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /payments/{id}/refund:
    post:
      summary: 결제 환불
      description: 결제를 환불합니다.
      tags:
        - Payments
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: 결제 ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefundRequest"
      responses:
        "200":
          description: 환불 처리 성공
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentResponse"
        "400":
          description: 잘못된 요청
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: 결제를 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

components:
  schemas:
    CreateMemberRequest:
      type: object
      required:
        - email
        - name
        - password
      properties:
        email:
          type: string
          format: email
          example: "user@example.com"
        name:
          type: string
          example: "홍길동"
        password:
          type: string
          format: password
          example: "securepassword123"

    UpdateMemberRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: "홍길동 수정"

    MemberResponse:
      type: object
      properties:
        id:
          type: string
          example: "f47ac10b-58cc-4372-a567-0e02b2c3d479"
        email:
          type: string
          format: email
          example: "user@example.com"
        name:
          type: string
          example: "홍길동"

    OrderItemRequest:
      type: object
      required:
        - productId
        - name
        - price
        - quantity
      properties:
        productId:
          type: string
          example: "prod-123"
        name:
          type: string
          example: "스마트폰"
        price:
          type: number
          format: float
          example: 1000000.0
        quantity:
          type: integer
          minimum: 1
          example: 1

    CreateOrderRequest:
      type: object
      required:
        - customerId
        - items
      properties:
        customerId:
          type: string
          example: "cust-123"
        items:
          type: array
          items:
            $ref: "#/components/schemas/OrderItemRequest"

    UpdateOrderStatusRequest:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum: [pending, paid, shipped, delivered, canceled]
          example: "shipped"

    OrderResponse:
      type: object
      properties:
        id:
          type: string
          example: "ord-123"
        customerId:
          type: string
          example: "cust-123"
        status:
          type: string
          enum: [pending, paid, shipped, delivered, canceled]
          example: "pending"
        total:
          type: number
          format: float
          example: 1200000.0

    CreatePaymentRequest:
      type: object
      required:
        - orderId
        - amount
        - method
      properties:
        orderId:
          type: string
          example: "ord-123"
        amount:
          type: number
          format: float
          example: 1200000.0
        method:
          type: string
          enum: [credit_card, bank_transfer, virtual_account]
          example: "credit_card"
        paymentData:
          type: object
          additionalProperties:
            type: string

    PaymentResponse:
      type: object
      properties:
        id:
          type: string
          example: "pay-123"
        orderId:
          type: string
          example: "ord-123"
        amount:
          type: number
          format: float
          example: 1200000.0
        method:
          type: string
          enum: [credit_card, bank_transfer, virtual_account]
          example: "credit_card"
        status:
          type: string
          enum: [pending, approved, rejected, refunded]
          example: "approved"
        transactionId:
          type: string
          example: "txn_123456789"

    RefundRequest:
      type: object
      required:
        - reason
      properties:
        reason:
          type: string
          example: "고객 요청에 의한 환불"

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: "An error occurred"
